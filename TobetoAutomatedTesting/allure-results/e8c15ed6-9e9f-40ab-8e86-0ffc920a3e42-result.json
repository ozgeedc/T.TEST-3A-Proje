{"name": "test_test_case_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_testsenaryo5.TestTestSenaryo5 object at 0x00000215A3828AA0>\nmethod = <bound method TestTestSenaryo5.test_test_case_1 of <test_testsenaryo5.TestTestSenaryo5 object at 0x00000215A3828AA0>>\n\n    def setup_method(self, method):\n        self.driver = webdriver.Chrome()\n        self.driver.maximize_window()\n        self.driver.get(\"https://tobeto.com/giris\")\n>       self.login(\"furkangmsky@gmail.com\", \"Furkan-1445\")\n\ntest_testsenaryo5.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_testsenaryo5.py:40: in login\n    WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//button[@type='submit']\"))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"07c3d134694b70d9f80ce1f3ace033c1\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000215A3841D00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1719650988273, "stop": 1719650988273, "uuid": "5fd5db93-6e50-4dcb-8b86-e8be09a97ebc", "historyId": "c9b2b09374dd04e4506c137596bc633e", "testCaseId": "c9b2b09374dd04e4506c137596bc633e", "fullName": "test_testsenaryo5.TestTestSenaryo5#test_test_case_1", "labels": [{"name": "suite", "value": "test_testsenaryo5"}, {"name": "subSuite", "value": "TestTestSenaryo5"}, {"name": "host", "value": "DESKTOP-TJPEEGF"}, {"name": "thread", "value": "16240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_testsenaryo5"}]}